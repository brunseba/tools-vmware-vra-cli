[build-system]
requires = ["uv_build>=0.8.0,<0.9.0"]
build-backend = "uv_build"

[project]
name = "vmware-vra-cli"
version = "0.11.0"
description = "A Python CLI tool to interact with VMware vRealize Automation 8 via REST API"
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
authors = [
    { name = "Sebastien Brun", email = "brun_s@example.com" }
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12"
]
dependencies = [
    "click>=8.0.0",
    "requests>=2.31.0",
    "pydantic>=2.0.0",
    "rich>=13.0.0",
    "keyring>=24.0.0",
    "pyyaml>=6.0.0",
    "fastapi>=0.104.0",
    "uvicorn>=0.24.0",
    "python-multipart>=0.0.6",
    "httpx>=0.25.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "requests-mock>=1.11.0",
    "black>=23.0.0",
    "isort>=5.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0"
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocs-git-revision-date-localized-plugin>=1.2.0",
    "mkdocs-pdf-export-plugin>=0.5.0"
]

[project.scripts]
vra = "vmware_vra_cli.cli:main"
vra-server = "vmware_vra_cli.app:main"

[project.urls]
Homepage = "https://github.com/brun_s/vmware-vra-cli"
Repository = "https://github.com/brun_s/vmware-vra-cli.git"
Issues = "https://github.com/brun_s/vmware-vra-cli/issues"
Documentation = "https://brun_s.github.io/vmware-vra-cli"

[tool.uv]
package = true

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(\n  # directories\n  \.eggs\n  | \.git\n  | \.hg\n  | \.mypy_cache\n  | \.tox\n  | \.venv\n  | build\n  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --cov=src --cov-report=term-missing --cov-report=html"
